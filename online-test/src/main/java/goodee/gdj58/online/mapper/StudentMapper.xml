<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="goodee.gdj58.online.mapper.StudentMapper">
	<!-- 학생 번호 검색 -->
	<select id="selectStudentNoById" parameterType="String" resultType="int">
		SELECT student_no studentNo FROM student WHERE student_id = #{studentId}
	</select>

	<!-- 직원 메인 화면 -> 최근 학생 -->
	<select id="selectRecentStudentList" resultType="java.util.Map">
		SELECT student_id studentId, student_name studentName
		FROM student
		ORDER BY student_no DESC
		LIMIT 0,5
	</select>
	
	<!-- 학생 로그인 -->
	<select id="login" parameterType="goodee.gdj58.online.vo.Student" resultType="goodee.gdj58.online.vo.Student">
		SELECT
			student_no studentNo
			, student_id studentId
			, student_name studentName
		FROM student
		WHERE
			student_id = #{studentId} AND student_pw = PASSWORD(#{studentPw})
	</select>
	
	<!-- 학생 비밀번호 수정 -->
	<update id="modifyStudentPw" parameterType="java.util.Map">
		UPDATE student
		SET student_pw = PASSWORD(#{newPw})
		WHERE student_no = #{studentNo} AND student_pw = PASSWORD(#{oldPw})
	</update>
	
	<!-- 학생 등록 -->
	<insert id="insertStudent" parameterType="goodee.gdj58.online.vo.Student">
		INSERT INTO student(student_id, student_pw, student_name)
		VALUES(#{studentId}, PASSWORD(#{studentPw}), #{studentName});
	</insert>
	
	<!-- 학생 삭제 -->
	<delete id="deleteStudent" parameterType="int">
		DELETE FROM student WHERE student_no = #{studentNo}
	</delete>
	
	<!-- 답안지 제출한 학생 검색 -->
	<select id="selectStudentByPaper" parameterType="int" resultType="String">
		SELECT s.student_no 
		FROM student s 
			JOIN paper p ON s.student_no = p.student_no
		WHERE s.student_no = #{studentNo}
		GROUP BY s.student_no
	</select>
	
	<!-- 학생 목록 -->
	<select id="selectStudentList" parameterType="java.util.Map" resultType="goodee.gdj58.online.vo.Student">
		SELECT
			student_no studentNo
			, student_id studentId
			, student_pw studentPw
			, student_name studentName
		FROM student
		<where>
			<if test="searchWord != null and searchWord != ''">
				student_name LIKE CONCAT('%', #{searchWord}, '%')
			</if>
		</where>
		ORDER BY student_no DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select> 
	
	<!-- 총 학생 수 -->
	<select id="selectStudentCount" parameterType="String" resultType="Integer">
		SELECT COUNT(*) FROM student
		<where>
			<if test="searchWord != null and searchWord != ''">
				student_name LIKE CONCAT('%', #{searchWord}, '%')
			</if>
		</where>
		ORDER BY student_no DESC
	</select>
</mapper>